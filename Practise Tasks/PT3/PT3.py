import random
import wordop as wo
import record as rec


def letter_change(word, mask, turn):
    reserve = word
    for i in range(reserve.count(turn)):
        mask = mask[:reserve.find(turn)] + turn + mask[reserve.find(turn) + 1:]
        reserve = reserve.replace(turn, '*', 1)
    return mask


def difficulty():
    answer = input('–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏!\n 1 - –ª—ë–≥–∫–∏–π (6 –∂–∏–∑–Ω–µ–π)\n 2 - —Å—Ä–µ–¥–Ω–∏–π (4 –∂–∏–∑–Ω–∏)\n 3 - —Å–ª–æ–∂–Ω—ã–π (2 –∂–∏–∑–Ω–∏)\n 4 - —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–π (1 –∂–∏–∑–Ω—å)')
    while True:
        if answer == '1':
            return 6
        elif answer == '2':
            return 4
        elif answer == '3':
            return 2
        elif answer == '4':
            return 1
        else:
            answer = input('1 - –ª—ë–≥–∫–∏–π (6 –∂–∏–∑–Ω–µ–π)\n 2 - —Å—Ä–µ–¥–Ω–∏–π (4 –∂–∏–∑–Ω–∏)\n 3 - —Å–ª–æ–∂–Ω—ã–π (2 –∂–∏–∑–Ω–∏)\n 4 - —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–π (1 –∂–∏–∑–Ω—å)')


def start_game(record):
    word = word_list.pop(random.randrange(len(word_list)))
    mask = '‚ñ†' * len(word)
    lives = difficulty()
    #alphabet = [–ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û–ü–†–°–¢–£–§–¶–ß–®–©–™–´–¨–≠–Æ–Ø]

    while True:
        if lives == 0:
            print('–£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∂–∏–∑–Ω–∏! –í—ã —É–º–µ—Ä–ª–∏! :\'(\n–ù–µ–æ—Ç–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –±—ã–ª–æ', word, '\n–í—ã –≤—Å–µ–≥–æ —É–≥–∞–¥–∞–ª–∏:', record, '—Å–ª–æ–≤.')
            break
        print(mask, f'üçîx{lives}')
        #print(word) #—á–∏—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ª–æ–≤–æ
        if mask == word:
            record += 1
            print('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –ø–æ–±–µ–¥–∏–ª–∏!\n–í—ã –≤—Å–µ–≥–æ —É–≥–∞–¥–∞–ª–∏', record, '—Å–ª–æ–≤.')
            break

        turn = input("–ù–∞–∑–æ–≤–∏—Ç–µ –±—É–∫–≤—É –∏–ª–∏ –≤—Å—ë —Å–ª–æ–≤–æ —Ü–µ–ª–∏–∫–æ–º:").upper()

        while True:
            if len(turn) == 1 and turn not in '–ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û–ü–†–°–¢–£–§–¶–ß–®–©–™–´–¨–≠–Æ–Ø':
                turn = input("–ù–∞–∑–æ–≤–∏—Ç–µ –±—É–∫–≤—É –∏–ª–∏ –≤—Å—ë —Å–ª–æ–≤–æ —Ü–µ–ª–∏–∫–æ–º:").upper()
            else:
                break

        if len(turn) == 1 and turn in word:
            mask = letter_change(word, mask, turn)
        elif len(turn) == 1:
            print('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –±—É–∫–≤–∞! –ú–∏–Ω—É—Å –∂–∏–∑–Ω—å!')
            lives -= 1
        elif len(turn) == len(word) and turn == word:
            mask = word
        elif len(turn) == len(word) and turn != word:
            print('–ù–µ–≤–µ—Ä–Ω–æ–µ —Å–ª–æ–≤–æ! –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! :(\n–ù–µ–æ—Ç–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –±—ã–ª–æ:', word, '\n–í—ã –≤—Å–µ–≥–æ —É–≥–∞–¥–∞–ª–∏', record, '—Å–ª–æ–≤.')
            break
        else:
            print('–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞: –æ–∂–∏–¥–∞–ª–∞—Å—å –±—É–∫–≤–∞ –∏–ª–∏ —Å–ª–æ–≤–æ —Ü–µ–ª–∏–∫–æ–º!')
    if len(word_list) == 0:
        print('–í—Å–µ —Å–ª–æ–≤–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å! –°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É!')
    else:
        answer = input('–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â—ë?\n 1 - –¥–∞, 2 - –Ω–µ—Ç.')
        while True:
            if answer == '1':
                start_game(record)
                break
            elif answer == '2':
                print('–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É!\n–í—Å–µ–≥–æ –≤—ã —É–≥–∞–¥–∞–ª–∏', record, '—Å–ª–æ–≤')
                rec.write_record(record)
                break
            else:
                answer = input('1 - –¥–∞, 2 - –Ω–µ—Ç.')


word_list = wo.get_words()

record = 0
start_game(record)